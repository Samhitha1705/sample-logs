pipeline {
  agent any

  environment {
    SPLUNK_HEC_URL   = 'https://127.0.0.1:8088/services/collector/event'
    SPLUNK_HEC_TOKEN = credentials('3366c860-b822-4ee9-8cfe-398871d88cc5')
    SPLUNK_INDEX     = 'jenkinsgit_logs'
    SERVICENOW_CREDS = credentials('servicenow-creds')
    SN_INSTANCE      = 'https://dev329656.service-now.com'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sendToSplunk("Code checkout completed")
      }
    }
    // … other stages …
  }

  post {
    success {
      script {
        def snPayload = '{\"short_description\":\"Jenkins Pipeline Succeeded - Build #' + env.BUILD_NUMBER +
                        '\",\"description\":\"All stages completed successfully.\",\"urgency\":\"4\",\"impact\":\"4\",\"caller_id\":\"6816f79cc0a8016401c5a33be04be441\"}'

        def resp = bat(
          script: """curl -s -X POST "${SN_INSTANCE}/api/now/table/incident" ^
            --user "${SERVICENOW_CREDS_USR}:${SERVICENOW_CREDS_PSW}" ^
            -H "Content-Type: application/json" ^
            -d '${snPayload}'""",
          returnStdout: true
        ).trim()

        def incNum = readJSON(text: resp).result.number
        sendToSplunk("ServiceNow incident ${incNum} created for SUCCESS build #${env.BUILD_NUMBER}")

        emailext(
          to: 'Veda@middlewaretalents.com',
          subject: "✅ Build #${env.BUILD_NUMBER} Succeeded (Incident ${incNum})",
          body: """
            <p>Hello Veda,</p>
            <p>Your Jenkins pipeline <b>#${env.BUILD_NUMBER}</b> completed successfully and created Incident <b>${incNum}</b> in ServiceNow.</p>
            <p><a href="${SN_INSTANCE}/nav_to.do?uri=incident.do?sysparm_query=number%3D${incNum}">View in ServiceNow</a></p>
          """
        )
      }
    }

    failure {
      script {
        def snPayload = '{\"short_description\":\"Jenkins Pipeline Failure - Build #' + env.BUILD_NUMBER +
                        '\",\"description\":\"Pipeline failed at stage ' + env.STAGE_NAME +
                        '.\",\"urgency\":\"2\",\"impact\":\"2\",\"caller_id\":\"6816f79cc0a8016401c5a33be04be441\"}'

        def resp = bat(
          script: """curl -s -X POST "${SN_INSTANCE}/api/now/table/incident" ^
            --user "${SERVICENOW_CREDS_USR}:${SERVICENOW_CREDS_PSW}" ^
            -H "Content-Type: application/json" ^
            -d '${snPayload}'""",
          returnStdout: true
        ).trim()

        def failInc = readJSON(text: resp).result.number
        sendToSplunk("ServiceNow incident ${failInc} created for FAILURE at stage: ${env.STAGE_NAME}")
      }
    }

    always {
      cleanWs()
    }
  }
}

// Shared helper
def sendToSplunk(String message) {
  bat """
    curl -k -X POST "${SPLUNK_HEC_URL}" ^
    -H "Authorization: Splunk ${SPLUNK_HEC_TOKEN}" ^
    -H "Content-Type: application/json" ^
    -d '{\"event\":\"${message}\",\"index\":\"${SPLUNK_INDEX}\"}'
  """
}
